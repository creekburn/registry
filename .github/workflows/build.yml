name: Build Piepline
on:
  push:
    branches-ignore:
      - main
concurrency:
  group: ${{ github.ref_name }}-build
  cancel-in-progress: true
jobs:
  generation:
    name: Source Generation
    runs-on: ubuntu-latest
    outputs:
      FILES_CHANGED: ${{ steps.files_changed.outputs.FILES_CHANGED }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Node Setup
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: Install
        run: npm ci
      - name: Lint Fix
        run: npm run eslint:fix
      - name: Prettier Fix
        run: npm run prettier:fix
      - name: Generate Docs
        run: npm run docs
      - name: Generate Typescript Types
        run: npm run tsc
      - id: files_changed
        name: Files Changed?
        run: |
          if [ "" == "$(git status -s)" ]; then
            echo "FILES_CHANGED=false" >> $GITHUB_OUTPUT
          else
            echo "FILES_CHANGED=true" >> $GITHUB_OUTPUT
          fi
      - name: Push Generated Code
        if: steps.files_changed.outputs.FILES_CHANGED == 'true'
        run: |
          git config --global user.email "github-action@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git add .
          git commit -m "Automatic Commit of Generated Files."
      - name: Push changes
        if: steps.files_changed.outputs.FILES_CHANGED == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      - name: Continue Job
        if: steps.files_changed.outputs.FILES_CHANGED == 'true'
        run: echo "FILES_CHANGED=false" >> $GITHUB_OUTPUT
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: generation
    if: needs.generation.outputs.FILES_CHANGED == 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Node Setup
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: Install
        run: npm ci
      - name: Lint
        run: npm run eslint
      - name: Prettier
        run: npm run prettier
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Node Setup
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: Install
        run: npm ci
      - name: Test
        run: npm run test
  archive:
    name: Archive
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Node Setup
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: Package
        id: package
        run: echo "TAR=$(npm pack -s)" >> $GITHUB_OUTPUT
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: "${{ steps.package.outputs.TAR }}"
          path: "${{ steps.package.outputs.TAR }}"
